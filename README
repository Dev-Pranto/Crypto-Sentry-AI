# üöÄ Crypto-Sentry AI

<div align="center">

*A smart cryptocurrency monitoring platform that detects market anomalies using AI*

[![Frontend](https://img.shields.io/badge/Frontend-React_TypeScript-blue)](https://reactjs.org/)
[![Backend](https://img.shields.io/badge/Backend-FastAPI_Python-green)](https://fastapi.tiangolo.com/)
[![AI](https://img.shields.io/badge/AI-TensorFlow_LSTM-orange)](https://tensorflow.org/)

[Live Demo](#live-demo) ‚Ä¢ [Features](#features) ‚Ä¢ [Quick Start](#quick-start) ‚Ä¢ [Tech Stack](#tech-stack)

</div>

## üìñ Overview

Crypto-Sentry AI started as my final year project - the goal was to build something that could actually help cryptocurrency traders spot unusual market activity before it becomes obvious.

Most crypto tools just show you prices and basic charts. I wanted to build something smarter that could actually understand market patterns and warn you when things look... weird.

The result is this full-stack application that combines real-time market data with a trained LSTM Autoencoder model to detect anomalies in cryptocurrency pricing and volume patterns.

## ‚ú® Key Features

### üß† AI-Powered Detection
- **LSTM Autoencoder** trained on crypto market patterns
- **Real-time anomaly scoring** with confidence levels
- **Multiple cryptocurrency support** (BTC, ETH, ADA, and more)
- **Adaptive thresholds** that adjust to market volatility

### üìä Interactive Dashboard
- **Real-time price charts** with volume overlays
- **Multiple timeframe views** (1D, 7D, 1M, 1Y)
- **Professional trading-style interface**
- **Market statistics and trends**

### üîî Smart Alert System
- **Price target alerts** for specific levels
- **AI anomaly alerts** when unusual patterns detected
- **Trend direction alerts** for momentum changes
- **Email/push notifications** ready for integration

## üõ† Tech Stack

| Layer | Technology | Purpose |
|-------|------------|---------|
| **Frontend** | React + TypeScript, Tailwind CSS, Shadcn/ui, Recharts | Type-safe, beautiful UI with interactive charts |
| **Backend** | FastAPI, Python, SQLAlchemy, JWT | High-performance API with automatic documentation |
| **AI/ML** | TensorFlow/Keras, Scikit-learn, Pandas, yFinance | Advanced anomaly detection and data processing |
| **Infrastructure** | Docker, Docker Compose, Nginx | Containerized deployment and serving |

## üöÄ Quick Start

### Prerequisites
- Docker and Docker Compose installed

### One-Command Setup
```bash
# Clone the repository
git clone https://github.com/Dev-Pranto/Crypto-Sentry-AI/
cd crypto-sentry-ai

# Start all services
docker-compose up
```

Wait a couple minutes (first build takes longer), then access:

- üåê **Web App**: http://localhost:3000
- üìö **API Docs**: http://localhost:8000/docs  
- ‚ù§Ô∏è **Health Check**: http://localhost:8000/health

### First Time Setup
1. Open http://localhost:3000
2. Click "Register" to create your account
3. Log in and start monitoring!

## üéÆ How to Use

### 1. Market Overview
- Dashboard shows Bitcoin by default
- Switch between different timeframes
- Toggle volume on/off for trading activity
- Monitor AI status indicator

### 2. Alert Management
- Click "Create Alert" in dashboard
- Choose cryptocurrency (BTC, ETH, ADA, DOT)
- Set alert type: Price target, AI anomaly, or trend alerts
- Configure thresholds and save

### 3. AI Analysis
- Click "Scan BTC" for quick AI analysis
- Monitor AI confidence scores
- View anomaly detection results
- Uses real market data with demo fallback

### 4. Portfolio Monitoring
- View all active alerts in one place
- Track triggered alerts
- Manage and delete alerts as needed

## üîß Development Setup

### Backend (Without Docker)
```bash
cd backend
python -m venv venv
source venv/bin/activate  # Windows: venv\Scripts\activate

# Install dependencies
pip install -r requirements.txt

# Configure environment
cp .env.example .env

# Start development server
uvicorn app.main:app --reload
```

### Frontend (Without Docker)
```bash
cd frontend
npm install

# Configure environment
cp .env.example .env

# Start development server
npm run dev
```

## üß† AI Model Details

### Problem Statement
Cryptocurrency markets exhibit extreme volatility where traditional statistical methods often fail due to constantly changing "normal" patterns.

### Solution Architecture
- **LSTM (Long Short-Term Memory)**: Captures temporal patterns in time series data
- **Autoencoder**: Learns to compress and reconstruct normal market behavior
- **Anomaly Detection**: Flags patterns with high reconstruction error

### Model Performance
| Metric | Value |
|--------|-------|
| Accuracy | ~85% on historical test data |
| False Positive Rate | <15% |
| Inference Time | <2 seconds for real-time analysis |

## üìÅ Project Structure

```
crypto-sentry-ai/
‚îú‚îÄ‚îÄ üìÅ backend/
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ app/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ api/           # FastAPI routes
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ core/          # Config and security
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ db/            # Database models
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ schemas/       # Pydantic models
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ ai_model/      # AI core functionality
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ model_artifacts/    # Trained LSTM model
‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ anomaly_detector.py    # AI analysis logic
‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ service.py             # AI service layer
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ main.py           # FastAPI app entry point
‚îÇ   ‚îú‚îÄ‚îÄ requirements.txt
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ üìÅ frontend/
‚îÇ   ‚îú‚îÄ‚îÄ üìÅ src/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ components/    # React components
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ contexts/      # Auth context
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ hooks/         # Custom React hooks
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ pages/         # Next.js style pages
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ App.tsx
‚îÇ   ‚îú‚îÄ‚îÄ package.json
‚îÇ   ‚îî‚îÄ‚îÄ Dockerfile
‚îú‚îÄ‚îÄ docker-compose.yml
‚îî‚îÄ‚îÄ README.md
```

## üö® Common Issues & Solutions

| Issue | Solution |
|-------|----------|
| API calls failing / using demo data | CoinGecko API rate limits - app falls back to realistic demo data |
| Docker compose taking forever | First build downloads dependencies - subsequent starts are faster |
| AI model not loading | Check model files exist, system falls back to Isolation Forest algorithm |

## üõ£ Roadmap

### Short Term
- [ ] Add more cryptocurrencies (SOL, XRP, etc.)
- [ ] Email notifications for alerts
- [ ] Mobile app version
- [ ] Social features (share analyses)

### Long Term
- [ ] Portfolio tracking and analytics
- [ ] Advanced AI models (Transformer networks)
- [ ] Predictive price forecasting
- [ ] Exchange integration for auto-trading

## ü§ù Contributing

We welcome contributions! Here's how to help:

1. Fork the repository
2. Create your feature branch: `git checkout -b feature/amazing-idea`
3. Commit your changes: `git commit -m 'Add some amazing idea'`
4. Push to the branch: `git push origin feature/amazing-idea`
5. Open a Pull Request

## üìú License

This project is licensed under the MIT License - see the LICENSE file for details.

## üôã‚Äç‚ôÇÔ∏è About Me

I'm a computer science student passionate about AI, fintech, and building things that solve real problems. This project represents months of learning about machine learning, full-stack development, and cryptocurrency markets.

If you're interested in the technical details or want to chat about AI in finance, feel free to reach out!

## üìû Contact

- **Email**: [hamimishthiaque@gmail.com](mailto:hamimishthiaque@gmail.com)
- **LinkedIn**: [Pranto AI](https://www.linkedin.com/in/pranto-ai/)

---

<div align="center">

If you find this project useful, please give it a ‚≠ê - it means a lot!

**Built with ‚ù§Ô∏è and way too much coffee**

</div>
